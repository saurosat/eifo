---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by tnguyen.
--- DateTime: 9/20/23 10:32 AM
---
local utils = eifo.utils
local connFactory = eifo.db.conn
local conn = connFactory.redis()
local ok, err = conn:connect()
if not ok then
    return nil, "failed to connect to DB: "..err
end
local sCmd, hashVals, oldVals, err, msg

sCmd = [[conn:hset("test:001", {f1 = "value 11", f2 = "value 12", f3 = "value 13"})]]
ngx.say("## Command: "..sCmd..":")
oldVals, err = conn:hset("test:001", {f1 = "value 11", f2 = "value 12", f3 = "value 13"})
hashVals = conn:hgetall("test:001")
msg = "Fail"
if hashVals and not utils.isTableEmpty(hashVals) then msg = "Pass" end
ngx.say("- Hash table 'test:001' should be created :"..msg)
ngx.say("- No error returned: "..(err or "Pass!"))

ngx.say("## Command: conn:commit() then conn:rollback():")
conn:commit()
conn:rollback()
hashVals = conn:hgetall("test:001")
msg = "Fail"
if hashVals and not utils.isTableEmpty(hashVals) then msg = "Pass" end
ngx.say("- Hash table 'test:001' should exist :"..msg)

sCmd = [[conn:hset("test:002", {f1 = "value 21", f2 = "value 22", f3 = "value 23"})]]
ngx.say("## Command: "..sCmd..":")
oldVals, err = conn:hset("test:002", {f1 = "value 21", f2 = "value 22", f3 = "value 23"})
hashVals = conn:hgetall("test:002")
msg = "Fail"
if hashVals and not utils.isTableEmpty(hashVals) then msg = "Pass" end
ngx.say("- Input hash table 'test:002' should be created :"..msg)
ngx.say("- No error returned: "..(err or "Pass!"))

sCmd = [[conn:hset("test:003", {f1 = "value 31", f2 = "value 32", f3 = "value 33"})]]
ngx.say("## Command: "..sCmd..":")
conn:hset("test:003", {f1 = "value 31", f2 = "value 32", f3 = "value 33"})
hashVals = conn:hgetall("test:003")
msg = "Fail"
if hashVals and not utils.isTableEmpty(hashVals) then msg = "Pass" end
ngx.say("- Input hash table 'test:003' should be created :"..msg)
ngx.say("- No error returned: "..(err or "Pass!"))

ngx.say("## Command: conn:rollback():")
conn:rollback()
hashVals = conn:hgetall("test:002")
msg = "Fail"
if not hashVals or utils.isTableEmpty(hashVals) then msg = "Pass" end
ngx.say("- Input hash table 'test:002' should be deleted :"..msg)
hashVals = conn:hgetall("test:003")
msg = "Fail"
if not hashVals or utils.isTableEmpty(hashVals) then msg = "Pass" end
ngx.say("- Input hash table 'test:003' should be deleted :"..msg)

ngx.say("## Command: conn:hdel(\"test:001\"):")
conn:hdel("test:001")
hashVals = conn:hgetall("test:001")
msg = "Fail"
if not hashVals or utils.isTableEmpty(hashVals) then msg = "Pass" end
ngx.say("- Input hash table 'test:001' should be deleted :"..msg)

ngx.say("## Command: conn:rollback():")
conn:rollback()
hashVals = conn:hgetall("test:001")
msg = "Fail"
if hashVals and not utils.isTableEmpty(hashVals) then msg = "Pass" end
ngx.say("- Hash table 'test:001' should be restored :"..msg)

ngx.say("## Command with auto-commit: conn:hdel(\"test:001\", nil, true):")
conn:hdel("test:001", nil, true)
hashVals = conn:hgetall("test:001")
msg = "Fail"
if not hashVals or utils.isTableEmpty(hashVals) then msg = "Pass" end
ngx.say("- Input hash table 'test:001' should be deleted :"..msg)

ngx.say("## Command: conn:rollback():")
conn:rollback()
hashVals = conn:hgetall("test:001")
msg = "Fail"
if not hashVals or utils.isTableEmpty(hashVals) then msg = "Pass" end
ngx.say("- Input hash table 'test:001' should not be restored :"..msg)

conn:disconnect()
