worker_processes 1;
error_log logs/error.log;
error_log logs/error.log info;
error_log logs/error.log debug;
events {
    worker_connections 512;
}
http {
    lua_shared_dict lock 1m;
    lua_shared_dict cluster 12k;
    include /usr/local/etc/openresty/mime.types;
    root /Users/tnguyen/Dev/eifo;
    lua_package_path "/Users/tnguyen/Dev/eifo/lua/?.lua;;"; 
    access_log logs/access.log;
    init_by_lua_block {
        eifo = {}
        local pwd = assert(io.popen("pwd", "r"))
        eifo.basePath = pwd:read('*a'):gsub("[\n\r]", "") 
        pwd:close()
        print("Base path: ", eifo.basePath)

        eifo.storeId = "store.P56586a9f100000"
        eifo.secretKey = "ABCD1234"
        eifo.db = {}
        eifo.db.host = "127.0.0.1"
        eifo.db.port = "6379"
        eifo.db.poolsize = 100
        eifo.db.timeout = 10000
        
    }
    ## ngx.shared.cluster:set("IPs", "192.168.1.2,192.168.1.4")
    init_worker_by_lua_file 'lua/init.lua';
    server {
        set $basePath '/Users/tnguyen/Dev/eifo';
        listen 443 ssl http2;
        listen 127.0.0.1:443 ssl http2 so_keepalive=on;
        server_name gleecy.io;
        ssl_certificate certificate.pem;
        ssl_certificate_key key.pem;
        set $autoRegen true;
	    location /notifyChanges {
            allow 127.0.0.1;
            # allow gleecy.io IP;
            # deny  all;
	        default_type text/html;
            content_by_lua_file lua/notifyChanges.lua;
        }
        # Web endpoint to receive notifications from Gleecy BO
	    location /update {
            allow 127.0.0.1;
            # allow gleecy.io IP;
            # deny  all;
	        default_type text/html;
            content_by_lua_file lua/update.lua;
        }
    }
    server {
        set $basePath '/Users/tnguyen/Dev/eifo';
        server_name gleecy.io;
        set $template_location "/";
        set $autoRegen true;
        listen 80;
        root $basePath;
        index /index;

#localhost:8090/products/GridItem/DEMO_001
# uri: /products/GridItem/DEMO_001
# step1: Tryfile /products/GridItem/DEMO_001.html --> not found
# step 2: try file /api/products/GridItem/DEMO_001/html
        # Root location for static contents:
        location = / {
            sendfile on;
            allow all;
            default_type text/html;
            try_files /home/index.html /api/index;
        }
        location / {
            sendfile on;
            allow all;
            default_type text/html;
            try_files /home$uri.html /home$uri/index.html /api$uri;
        }
        location = /token {
            default_type text/javascript;
            content_by_lua_file lua/sessionToken.lua;
        }
        location @images {
            content_by_lua_file lua/images.lua;
        }
        location ~ "^/(?<pseudoId>\w+)\.(?<sig>\w{8,16})\.(?<size>\d{2,4}x\d{2,4})\.(?<fileName>[^/\.]+)\.(?<ext>webp|svg|png|jpg|jpeg|gif|ico)$" {
            try_files /home/img/$pseudoId/$fileName.$sig.$size.$ext @images;
        }
#         location /view/ {
#             internal;
#             sendfile on;
#             tcp_nopush on;
#             default_type text/html;
#             try_files /home$uri.html /api$uri;
#         }
        location ~ (\\|\||\$|\{|\[|\(|\)|\]|\})+ {
            return 404;
        }
        location ~ (.*?)(\/+)$ { # remove trailing slashes if any
            return 301 $scheme://$host$1;
        }
        location ~* \.(webp|svg|png|jpg|jpeg|gif|ico)$ {
            root home/img;
        }
        location ~* \.css {
            root home/css;
        }
        location ~* \.js {
            root home/js;
        }
        location /home/ {
            internal;
            sendfile on;
            tcp_nopush on;
            allow all;
            default_type text/html;
        }
        # Internal location for template files
        location ~* \.view.html {
            sendfile on;
            # internal;
            root lua/view;
        }
        location /api/ {
            internal;
            default_type text/plain;
            content_by_lua_file lua/router.lua;
        }
        # Web endpoint to receive notifications from Gleecy BO
	    location /notifyChanges {
            allow 127.0.0.1;
            # allow gleecy.io IP;
            # deny  all;
	        default_type text/html;
            content_by_lua_file lua/notifyChanges.lua;
        }
        # Web endpoint to receive notifications from Gleecy BO
	    location /update {
            allow 127.0.0.1;
            # allow gleecy.io IP;
            # deny  all;
	        default_type text/html;
            content_by_lua_file lua/update.lua;
        }
        location /setup {
            allow 127.0.0.1;
            deny  all;
	        default_type text/html;
            content_by_lua_file lua/setup/$uri.lua;
        }

        location ~ ^/test(?<uc>[^/\?]+)(/(?<params>.*$)|$) {
            allow 127.0.0.1;
            deny  all;
	        default_type text/html;
            content_by_lua_file lua/test/test$uc.lua;
        }
    }
}
